// <auto-generated />
using System;
using APBD8.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APBD8.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20210516231035_UpdateData3")]
    partial class UpdateData3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APBD8.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "mjaworski@gmail.com",
                            FirstName = "Marcel",
                            LastName = "Jaworski"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "madamczyk@gmail.com",
                            FirstName = "Marika",
                            LastName = "Adamczyk"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "ewalczak@gmail.com",
                            FirstName = "Eryk",
                            LastName = "Walczak"
                        },
                        new
                        {
                            IdDoctor = 4,
                            Email = "kszulc@gmail.com",
                            FirstName = "Kamila",
                            LastName = "Szulc"
                        },
                        new
                        {
                            IdDoctor = 5,
                            Email = "aszewczyk@gmail.com",
                            FirstName = "Adrianna",
                            LastName = "Szewczyk"
                        });
                });

            modelBuilder.Entity("APBD8.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "Opis w trakcie budowy",
                            Name = "HealthLabs 4Us",
                            Type = "Witamina C"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "Opis w trakcie budowy",
                            Name = "Starazolin",
                            Type = "Krople do oczu"
                        },
                        new
                        {
                            IdMedicament = 3,
                            Description = "Opis w trakcie budowy",
                            Name = "Vigalex Forte",
                            Type = "Środek na odporność"
                        },
                        new
                        {
                            IdMedicament = 4,
                            Description = "Opis w trakcie budowy",
                            Name = "Solgar",
                            Type = "Preparat na stawy"
                        },
                        new
                        {
                            IdMedicament = 5,
                            Description = "Opis w trakcie budowy",
                            Name = "Hyal-Drop Multi",
                            Type = "Krople do oczu"
                        });
                });

            modelBuilder.Entity("APBD8.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Birthdate = new DateTime(1999, 4, 7, 22, 0, 0, 0, DateTimeKind.Utc),
                            FirstName = "Paweł",
                            LastName = "Maciejewski"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthdate = new DateTime(1967, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Oliwia",
                            LastName = "Zielińska"
                        },
                        new
                        {
                            IdPatient = 3,
                            Birthdate = new DateTime(1977, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Juliusz",
                            LastName = "Król"
                        },
                        new
                        {
                            IdPatient = 4,
                            Birthdate = new DateTime(1976, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bartek",
                            LastName = "Jaworski"
                        },
                        new
                        {
                            IdPatient = 5,
                            Birthdate = new DateTime(2017, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bartek",
                            LastName = "Kubiak"
                        });
                });

            modelBuilder.Entity("APBD8.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescription");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            Date = new DateTime(2000, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2021, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 1,
                            IdPatient = 4
                        },
                        new
                        {
                            IdPrescription = 2,
                            Date = new DateTime(2021, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2021, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 3,
                            IdPatient = 4
                        },
                        new
                        {
                            IdPrescription = 3,
                            Date = new DateTime(2021, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2021, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 1,
                            IdPatient = 5
                        },
                        new
                        {
                            IdPrescription = 4,
                            Date = new DateTime(2020, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2021, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 5,
                            IdPatient = 5
                        },
                        new
                        {
                            IdPrescription = 5,
                            Date = new DateTime(2021, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2021, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 3,
                            IdPatient = 4
                        });
                });

            modelBuilder.Entity("APBD8.Models.Prescription_Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription");

                    b.HasIndex("IdPrescription");

                    b.ToTable("Prescription_Medicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 2,
                            IdPrescription = 4,
                            Details = "Przykładowe detale",
                            Dose = 1
                        },
                        new
                        {
                            IdMedicament = 5,
                            IdPrescription = 2,
                            Details = "Przykładowe detale",
                            Dose = 5
                        },
                        new
                        {
                            IdMedicament = 1,
                            IdPrescription = 1,
                            Details = "Przykładowe detale",
                            Dose = 10
                        },
                        new
                        {
                            IdMedicament = 3,
                            IdPrescription = 5,
                            Details = "Przykładowe detale",
                            Dose = 1
                        },
                        new
                        {
                            IdMedicament = 1,
                            IdPrescription = 3,
                            Details = "Przykładowe detale",
                            Dose = 5
                        });
                });

            modelBuilder.Entity("APBD8.Models.Prescription", b =>
                {
                    b.HasOne("APBD8.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD8.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("APBD8.Models.Prescription_Medicament", b =>
                {
                    b.HasOne("APBD8.Models.Medicament", "Medicament")
                        .WithMany("Prescription_Medicaments")
                        .HasForeignKey("IdMedicament")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD8.Models.Prescription", "Prescription")
                        .WithMany("Prescription_Medicaments")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("APBD8.Models.Doctor", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("APBD8.Models.Medicament", b =>
                {
                    b.Navigation("Prescription_Medicaments");
                });

            modelBuilder.Entity("APBD8.Models.Patient", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("APBD8.Models.Prescription", b =>
                {
                    b.Navigation("Prescription_Medicaments");
                });
#pragma warning restore 612, 618
        }
    }
}
